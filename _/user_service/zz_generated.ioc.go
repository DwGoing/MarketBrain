//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package user_service

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &userService_{}
		},
	})
	userServiceStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &UserService{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*UserService)
			var constructFunc UserServiceConstructFunc = NewUserService
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(userServiceStructDescriptor)
}

type UserServiceConstructFunc func(impl *UserService) (*UserService, error)
type userService_ struct {
	Initialize_ func() error
}

func (u *userService_) Initialize() error {
	return u.Initialize_()
}

type UserServiceIOCInterface interface {
	Initialize() error
}

var _userServiceSDID string

func GetUserServiceSingleton() (*UserService, error) {
	if _userServiceSDID == "" {
		_userServiceSDID = util.GetSDIDByStructPtr(new(UserService))
	}
	i, err := singleton.GetImpl(_userServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*UserService)
	return impl, nil
}

func GetUserServiceIOCInterfaceSingleton() (UserServiceIOCInterface, error) {
	if _userServiceSDID == "" {
		_userServiceSDID = util.GetSDIDByStructPtr(new(UserService))
	}
	i, err := singleton.GetImplWithProxy(_userServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(UserServiceIOCInterface)
	return impl, nil
}

type ThisUserService struct {
}

func (t *ThisUserService) This() UserServiceIOCInterface {
	thisPtr, _ := GetUserServiceIOCInterfaceSingleton()
	return thisPtr
}
