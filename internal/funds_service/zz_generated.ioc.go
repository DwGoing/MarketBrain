//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package funds_service

import (
	contextx "context"
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
	"google.golang.org/protobuf/types/known/emptypb"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &fundsService_{}
		},
	})
	fundsServiceStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &FundsService{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*FundsService)
			var constructFunc FundsServiceConstructFunc = NewFundsService
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(fundsServiceStructDescriptor)
}

type FundsServiceConstructFunc func(impl *FundsService) (*FundsService, error)
type fundsService_ struct {
	GetCollectionWallet_ func(ctx contextx.Context, request *emptypb.Empty) (*GetCollectionWalletResponse, error)
	GetRechargeWallet_   func(ctx contextx.Context, request *GetRechargeWalletRequest) (*GetRechargeWalletResponse, error)
	GetRechargeRecords_  func(ctx contextx.Context, request *GetRechargeRecordsRequest) (*GetRechargeRecordsResponse, error)
	FundsCollect_        func(ctx contextx.Context, request *FundsCollectRequest) (*emptypb.Empty, error)
	Transfer_            func(ctx contextx.Context, request *TransferRequest) (*emptypb.Empty, error)
}

func (f *fundsService_) GetCollectionWallet(ctx contextx.Context, request *emptypb.Empty) (*GetCollectionWalletResponse, error) {
	return f.GetCollectionWallet_(ctx, request)
}

func (f *fundsService_) GetRechargeWallet(ctx contextx.Context, request *GetRechargeWalletRequest) (*GetRechargeWalletResponse, error) {
	return f.GetRechargeWallet_(ctx, request)
}

func (f *fundsService_) GetRechargeRecords(ctx contextx.Context, request *GetRechargeRecordsRequest) (*GetRechargeRecordsResponse, error) {
	return f.GetRechargeRecords_(ctx, request)
}

func (f *fundsService_) FundsCollect(ctx contextx.Context, request *FundsCollectRequest) (*emptypb.Empty, error) {
	return f.FundsCollect_(ctx, request)
}

func (f *fundsService_) Transfer(ctx contextx.Context, request *TransferRequest) (*emptypb.Empty, error) {
	return f.Transfer_(ctx, request)
}

type FundsServiceIOCInterface interface {
	GetCollectionWallet(ctx contextx.Context, request *emptypb.Empty) (*GetCollectionWalletResponse, error)
	GetRechargeWallet(ctx contextx.Context, request *GetRechargeWalletRequest) (*GetRechargeWalletResponse, error)
	GetRechargeRecords(ctx contextx.Context, request *GetRechargeRecordsRequest) (*GetRechargeRecordsResponse, error)
	FundsCollect(ctx contextx.Context, request *FundsCollectRequest) (*emptypb.Empty, error)
	Transfer(ctx contextx.Context, request *TransferRequest) (*emptypb.Empty, error)
}

var _fundsServiceSDID string

func GetFundsServiceSingleton() (*FundsService, error) {
	if _fundsServiceSDID == "" {
		_fundsServiceSDID = util.GetSDIDByStructPtr(new(FundsService))
	}
	i, err := singleton.GetImpl(_fundsServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*FundsService)
	return impl, nil
}

func GetFundsServiceIOCInterfaceSingleton() (FundsServiceIOCInterface, error) {
	if _fundsServiceSDID == "" {
		_fundsServiceSDID = util.GetSDIDByStructPtr(new(FundsService))
	}
	i, err := singleton.GetImplWithProxy(_fundsServiceSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(FundsServiceIOCInterface)
	return impl, nil
}

type ThisFundsService struct {
}

func (t *ThisFundsService) This() FundsServiceIOCInterface {
	thisPtr, _ := GetFundsServiceIOCInterfaceSingleton()
	return thisPtr
}
