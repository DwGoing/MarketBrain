//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package controller

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
	"github.com/gin-gonic/gin"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &fundsController_{}
		},
	})
	fundsControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &FundsController{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*FundsController)
			var constructFunc FundsControllerConstructFunc = NewFundsController
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(fundsControllerStructDescriptor)
}

type FundsControllerConstructFunc func(impl *FundsController) (*FundsController, error)
type fundsController_ struct {
	GetRechargeWallet_  func(ctx *gin.Context)
	GetRechargeRecords_ func(ctx *gin.Context)
}

func (f *fundsController_) GetRechargeWallet(ctx *gin.Context) {
	f.GetRechargeWallet_(ctx)
}

func (f *fundsController_) GetRechargeRecords(ctx *gin.Context) {
	f.GetRechargeRecords_(ctx)
}

type FundsControllerIOCInterface interface {
	GetRechargeWallet(ctx *gin.Context)
	GetRechargeRecords(ctx *gin.Context)
}

var _fundsControllerSDID string

func GetFundsControllerSingleton() (*FundsController, error) {
	if _fundsControllerSDID == "" {
		_fundsControllerSDID = util.GetSDIDByStructPtr(new(FundsController))
	}
	i, err := singleton.GetImpl(_fundsControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*FundsController)
	return impl, nil
}

func GetFundsControllerIOCInterfaceSingleton() (FundsControllerIOCInterface, error) {
	if _fundsControllerSDID == "" {
		_fundsControllerSDID = util.GetSDIDByStructPtr(new(FundsController))
	}
	i, err := singleton.GetImplWithProxy(_fundsControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(FundsControllerIOCInterface)
	return impl, nil
}

type ThisFundsController struct {
}

func (t *ThisFundsController) This() FundsControllerIOCInterface {
	thisPtr, _ := GetFundsControllerIOCInterfaceSingleton()
	return thisPtr
}
