//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by iocli, run 'iocli gen' to re-generate

package controller

import (
	autowire "github.com/alibaba/ioc-golang/autowire"
	normal "github.com/alibaba/ioc-golang/autowire/normal"
	singleton "github.com/alibaba/ioc-golang/autowire/singleton"
	util "github.com/alibaba/ioc-golang/autowire/util"
	"github.com/gin-gonic/gin"
)

func init() {
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &chainController_{}
		},
	})
	chainControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ChainController{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*ChainController)
			var constructFunc ChainControllerConstructFunc = NewChainController
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(chainControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &configController_{}
		},
	})
	configControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &ConfigController{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*ConfigController)
			var constructFunc ConfigControllerConstructFunc = NewConfigController
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(configControllerStructDescriptor)
	normal.RegisterStructDescriptor(&autowire.StructDescriptor{
		Factory: func() interface{} {
			return &fundsController_{}
		},
	})
	fundsControllerStructDescriptor := &autowire.StructDescriptor{
		Factory: func() interface{} {
			return &FundsController{}
		},
		ConstructFunc: func(i interface{}, _ interface{}) (interface{}, error) {
			impl := i.(*FundsController)
			var constructFunc FundsControllerConstructFunc = NewFundsController
			return constructFunc(impl)
		},
		Metadata: map[string]interface{}{
			"aop":      map[string]interface{}{},
			"autowire": map[string]interface{}{},
		},
	}
	singleton.RegisterStructDescriptor(fundsControllerStructDescriptor)
}

type ChainControllerConstructFunc func(impl *ChainController) (*ChainController, error)
type ConfigControllerConstructFunc func(impl *ConfigController) (*ConfigController, error)
type FundsControllerConstructFunc func(impl *FundsController) (*FundsController, error)
type chainController_ struct {
	GetBalance_ func(ctx *gin.Context)
}

func (c *chainController_) GetBalance(ctx *gin.Context) {
	c.GetBalance_(ctx)
}

type configController_ struct {
	Load_ func(ctx *gin.Context)
	Set_  func(ctx *gin.Context)
}

func (c *configController_) Load(ctx *gin.Context) {
	c.Load_(ctx)
}

func (c *configController_) Set(ctx *gin.Context) {
	c.Set_(ctx)
}

type fundsController_ struct {
	GetRechargeWallet_  func(ctx *gin.Context)
	GetRechargeRecords_ func(ctx *gin.Context)
}

func (f *fundsController_) GetRechargeWallet(ctx *gin.Context) {
	f.GetRechargeWallet_(ctx)
}

func (f *fundsController_) GetRechargeRecords(ctx *gin.Context) {
	f.GetRechargeRecords_(ctx)
}

type ChainControllerIOCInterface interface {
	GetBalance(ctx *gin.Context)
}

type ConfigControllerIOCInterface interface {
	Load(ctx *gin.Context)
	Set(ctx *gin.Context)
}

type FundsControllerIOCInterface interface {
	GetRechargeWallet(ctx *gin.Context)
	GetRechargeRecords(ctx *gin.Context)
}

var _chainControllerSDID string

func GetChainControllerSingleton() (*ChainController, error) {
	if _chainControllerSDID == "" {
		_chainControllerSDID = util.GetSDIDByStructPtr(new(ChainController))
	}
	i, err := singleton.GetImpl(_chainControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*ChainController)
	return impl, nil
}

func GetChainControllerIOCInterfaceSingleton() (ChainControllerIOCInterface, error) {
	if _chainControllerSDID == "" {
		_chainControllerSDID = util.GetSDIDByStructPtr(new(ChainController))
	}
	i, err := singleton.GetImplWithProxy(_chainControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(ChainControllerIOCInterface)
	return impl, nil
}

type ThisChainController struct {
}

func (t *ThisChainController) This() ChainControllerIOCInterface {
	thisPtr, _ := GetChainControllerIOCInterfaceSingleton()
	return thisPtr
}

var _configControllerSDID string

func GetConfigControllerSingleton() (*ConfigController, error) {
	if _configControllerSDID == "" {
		_configControllerSDID = util.GetSDIDByStructPtr(new(ConfigController))
	}
	i, err := singleton.GetImpl(_configControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*ConfigController)
	return impl, nil
}

func GetConfigControllerIOCInterfaceSingleton() (ConfigControllerIOCInterface, error) {
	if _configControllerSDID == "" {
		_configControllerSDID = util.GetSDIDByStructPtr(new(ConfigController))
	}
	i, err := singleton.GetImplWithProxy(_configControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(ConfigControllerIOCInterface)
	return impl, nil
}

type ThisConfigController struct {
}

func (t *ThisConfigController) This() ConfigControllerIOCInterface {
	thisPtr, _ := GetConfigControllerIOCInterfaceSingleton()
	return thisPtr
}

var _fundsControllerSDID string

func GetFundsControllerSingleton() (*FundsController, error) {
	if _fundsControllerSDID == "" {
		_fundsControllerSDID = util.GetSDIDByStructPtr(new(FundsController))
	}
	i, err := singleton.GetImpl(_fundsControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(*FundsController)
	return impl, nil
}

func GetFundsControllerIOCInterfaceSingleton() (FundsControllerIOCInterface, error) {
	if _fundsControllerSDID == "" {
		_fundsControllerSDID = util.GetSDIDByStructPtr(new(FundsController))
	}
	i, err := singleton.GetImplWithProxy(_fundsControllerSDID, nil)
	if err != nil {
		return nil, err
	}
	impl := i.(FundsControllerIOCInterface)
	return impl, nil
}

type ThisFundsController struct {
}

func (t *ThisFundsController) This() FundsControllerIOCInterface {
	thisPtr, _ := GetFundsControllerIOCInterfaceSingleton()
	return thisPtr
}
